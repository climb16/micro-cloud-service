server:
  ip: ${spring.cloud.client.ip-address}
  id: ${spring.cloud.client.ip-address}
  port: 7010
  http2:
    enabled: true
spring:
  profiles: peer1
  cloud:
    gateway:
      default-filters:
      routes:
      - id: user
        uri: lb://micro-service-user
        predicates:
        - Path=/baidu
        filters:
        - name: Hystrix
          args:
            name: fallbackcmd
            fallbackUri: forward:/fallback
        #- StripPrefix=1
        - name: Retry
          args:
            retries: 2 #重试次数，默认3，不包含本次
            status: 404 #重试response code，默认没有
            statusSeries: 500 #重试response code的系列，100（info），200（success），300（redirect），400（client error），500（server error），默认500
            method: GET #重试的request请求，默认GET
        - name: Auth
          args:
            enable: true
            name: Token
            value: 10000

    inetutils:
      ignored-interfaces[0]: eth0
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 2000
---
server:
  ip: ${spring.cloud.client.ip-address}
  id: ${spring.cloud.client.ip-address}
  port: 7011
  http2:
    enabled: true
spring:
  profiles: peer2
  cloud:
    gateway:
      default-filters:
      routes:
      - id: user
        uri: lb://micro-service-user
        predicates:
        - Path=/api/user/**
        filters:
        - name: Hystrix
          args:
            name: fallbackcmd
            fallbackUri: forward:/fallback
        #- StripPrefix=1
        - name: Retry
          args:
            retries: 2 #重试次数，默认3，不包含本次
            status: 404 #重试response code，默认没有
            statusSeries: 500 #重试response code的系列，100（info），200（success），300（redirect），400（client error），500（server error），默认500
            method: GET #重试的request请求，默认GET
    inetutils:
      ignored-interfaces[0]: eth0
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000
